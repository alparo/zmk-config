/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define ARR 1
#define SYM 2
#define HK 3
#define ADJ 4

&mt {
	flavor = "tap-preferred";
};

/ {
	
	    behaviors {
			td0: td_ply_nxt {
				compatible = "zmk,behavior-tap-dance";
				label = "TD_PLY_NXT";
				#binding-cells = <0>;
				tapping-term-ms = <280>;
				bindings = <&kp C_PLAY_PAUSE>, <&kp C_NEXT>, <&kp C_PREV>;
			};
			td1: td_mns_sls {
				compatible = "zmk,behavior-tap-dance";
				label = "TD_MNS_SLS";
				#binding-cells = <0>;
				tapping-term-ms = <200>;
				bindings = <&kp KP_MINUS>, <&kp KP_SLASH>;
			};
			td2: td_pls_ast {
				compatible = "zmk,behavior-tap-dance";
				label = "TD_PLS_AST";
				#binding-cells = <0>;
				tapping-term-ms = <200>;
				bindings = <&kp KP_PLUS>, <&kp KP_ASTERISK>;
			};
		};
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  GUI |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
//        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
//        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
//                           | RSE | SPC | LWR |   | LWR | BKSP | RSE |
                        bindings = <
   &kp LWIN &mt RALT ESC &kp Q &kp W &kp E &kp R &kp T &kp Y         &kp U  &kp I     &kp O   &kp P    &kp LBKT &mt RWIN RBKT
            &kp LA(LC(TAB)) &kp A &kp S &kp D &kp F &kp G &kp H         &kp J  &kp K     &kp L   &kp SEMI &mt RCTRL SQT
            &mt LCTRL MINUS &kp Z &kp X &kp C &kp V &kp B &kp N         &kp M  &kp COMMA &kp DOT &kp FSLH &kp BSLH
                         &lt HK TAB &lt ARR CAPS &mt LSHFT SPACE &mt RSHFT ENTER &lt SYM BSPC &lt HK DEL
                        >;
                };
				
                arrows_layer {
// -----------------------------------------------------------------------------------------
// |     | NMLK |  /  |  7  |  8  |  9  |  -  |   | VOLU| HOME| PRSC| PGUP| SCLK| CLCK|     |
//       | CTRL |  *  |  4  |  5  |  6  |  +  |   | MUT | LEFT|  UP | RGHT| INS | APP |
//       |      |  0  |  1  |  2  |  3  |  .  |   | VOLD| END | DOWN| PGDN| PAUS|     |
//                          |     |     | ADJ |   | ADJ |     |     |
                        bindings = <
   &trans &kp EQUAL      &kp N5    &kp KP_N7 &kp KP_N8 &kp KP_N9 &td1        &kp F6    &kp F7   &kp F8   &kp F9   &kp F10  &kp F11 &trans
          &kp KP_ENTER &kp KP_DOT &kp KP_N4 &kp KP_N5 &kp KP_N6 &td2         &kp N6    &kp N7   &kp N8   &kp N9   &kp N0  &kp BSLH
          &kp C_AL_CALC &kp RA(KP_DOT) &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_N0        &trans &trans  &trans  &trans &trans &trans
                                                           &trans &trans &trans   &trans &kp DEL &kp LS(INS)
                        >;
                };	
				
                symbols_layer {
// -----------------------------------------------------------------------------------------
// |     |  _  |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |
//       |  +  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  -  |
//       |  =  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans &kp F12   &kp F1   &kp F2 &kp F3  &kp F4   &kp F5           &kp HOME    &kp PG_DN   &kp PG_UP   &kp END   &trans  &kp C_VOL_UP &mt RGUI F12
          &trans   &kp N1   &kp N2 &kp N3   &kp N4   &kp N5        &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &td0
          &trans   &trans   &trans &trans   &trans   &trans        &kp LC(LEFT) &kp LC(PG_DN) &kp LC(PG_UP) &kp LC(RIGHT) &trans &kp C_VOL_DN
                                              &trans &trans &trans   &trans &trans &trans
                        >;
                };
				
                hotkeys_layer {
                        bindings = <
   &trans &kp LC(Z) &kp LG(N1) &kp LG(N2) &kp LG(N3) &kp LG(N4) &kp LG(N5)         &kp LG(N6) &kp LG(N7) &kp LG(N8) &kp LG(N9) &kp LG(N0)  &trans &trans
          &kp LC(LA(K)) &kp LC(A) &kp LC(X) &kp LC(C) &kp LC(V) &kp LG(V)        &trans &trans &kp LG(S) &kp LG(L) &kp LG(SEMICOLON) &trans
          &kp LC(LA(P)) &kp LS(LG(S)) &kp LG(D) &kp LG(E) &trans  &trans           &trans &trans   &trans &trans   &trans   &trans
                                              &trans &trans &trans   &trans &kp LS(DEL) &lt ADJ DEL
                        >;
                };

                adjust_layer {
// -----------------------------------------------------------------------------------------
// | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
//       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
//       |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                          |     |     |     |   |     |     |     |
                        bindings = <
   &reset &bootloader  &none        &none        &none        &none        &none              &none        &none        &none        &none        &none         &bootloader &reset
          &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4       &bt BT_SEL 4 &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0  &bt BT_CLR
          &none        &none        &none        &none        &none        &none              &none        &none        &none        &none        &none         &none
                                                                    &trans &none &trans   &trans &none &trans
                        >;
                };
        };
};
